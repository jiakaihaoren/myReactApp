{"version":3,"sources":["jkzzj/subject/centerImg/index.module.css","jkzzj/subject/detail/index.module.css","jkzzj/subject/sideLeaf/index.module.css","jkzzj/subject/detail/detailImg/DetailImg.module.css","reducer/index.ts","store/index.ts","test/TestHooks.tsx","utils/message.ts","serverTest/TableList.tsx","api/listApi.ts","serverTest/SearchId.tsx","serverTest/AddUser.tsx","serverTest/index.tsx","animation/index.tsx","jkzzj/subject/utils.ts","jkzzj/subject/centerImg/index.tsx","jkzzj/subject/sideLeaf/index.tsx","jkzzj/subject/detail/detailImg/DetailImg.tsx","jkzzj/subject/detail/index.tsx","jkzzj/subject/index.tsx","jkzzj/index.tsx","App.tsx","serviceWorker.js","index.js","jkzzj/subject/index.module.css"],"names":["module","exports","reducer","state","INITIAL_STATE","action","type","show","payload","create","StoreContext","useDispatch","useMappedState","TestHooks","useState","name","setName","editName","setEditName","value","onChange","e","target","onClick","messageShow","data","status","message","success","content","error","TableList","props","list","deleteUserForm","id","params","Promise","resolve","reject","Axios","get","then","response","ex","columns","title","dataIndex","key","render","_text","record","dataSource","rowKey","SearchId","getListById","input","setInput","searchById","placeholder","event","width","test","Number","AddUser","Form","form","useEffect","validateFields","fieldsError","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","nameError","moneyError","layout","onSubmit","preventDefault","err","values","console","log","post","Item","validateStatus","help","rules","required","prefix","style","color","htmlType","disabled","Object","keys","some","field","SpringTest","setList","getAllList","map","money","Animation","messageArr","split","toggle","setToggle","props1","useSpring","opacity","from","props2","props3","set1","useSprings","length","item","index","springs1","set","useTrail","height","div","springIndex","animatedClickHandle","sourceUrl","navTexts","navImgs","trans","x","y","s","CenterImg","showAnimated","xys","config","mass","tension","friction","propsSpring","imageUrl","className","styles","wrap","onMouseMove","onMouseLeave","transform","interpolate","card","src","navUris","SideLeaf","navIndex","showDetail","children","duration","springProps","setSpringProps","backgroundImage","to","i","scale","rot","Math","random","delay","r","DetailImg","cards","navImg","Set","gone","springsProps","bind","useGesture","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","size","setTimeout","clear","root","NavDetail","showNav","xy","body","sideLeaf","Subject","setNavIndex","setShowAnimated","bgMusic","bgMusicSource","preload","autoPlay","loop","centerImg","home","nav","navCenter","JKZZJ","App","useCallback","spinning","exact","path","Boolean","location","hostname","match","store","createStore","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,0B,oBCAxDD,EAAOC,QAAU,CAAC,SAAW,2B,oBCA7BD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,qMCGV,SAASC,IAAwD,IAAhDC,EAA+C,uDAA/BC,EAAeC,EAAgB,uCAC3E,OAAQA,EAAOC,MAEX,IAAK,OACD,OAAO,eACAH,EADP,CAEII,KAAMF,EAAOG,UAIrB,QACI,OAAOL,G,aCFNC,EAAwB,CACjCG,MAAM,G,MAOmDE,cAA9CC,E,EAAAA,aAAcC,E,EAAAA,YAAaC,E,EAAAA,e,QCM3BC,MAzBf,WAAsB,IAAD,EACOC,mBAAS,MADhB,mBACVC,EADU,KACJC,EADI,OAEeF,mBAASC,GAFxB,mBAEVE,EAFU,KAEAC,EAFA,KAgBjB,OACI,6BACI,oCAAUH,EAAV,KACA,6BAFJ,kCAGU,2BAAOI,MAAOF,EAAUG,SAZlB,SAACC,GACjBH,EAAYG,EAAEC,OAAOH,UAYjB,4BAAQI,QATK,WAPjBP,EAQWC,KAQP,kB,4CCnBCO,EAAc,SAACC,GACJ,MAAhBA,EAAKC,OACLC,IAAQC,QAAQH,EAAKI,SAErBF,IAAQG,MAAML,EAAKI,UCGdE,EAAY,SAACC,GAAiB,IAC/BC,EAASD,EAATC,KAEFC,EAAiB,SAACC,GC2CF,IAACC,KD1CR,CAAED,MC2CD,IAAIE,SAA8B,SAACC,EAASC,GACxD,IACIC,IAAMC,IAAN,UAzDI,UAyDJ,WAAqD,CAAEL,OAAQA,IAAUM,MAAK,SAAAC,GAC1EL,EAAQK,EAASlB,SAEvB,MAAOmB,GACLL,EAAOK,QDjDQF,MAAK,SAAAjB,GACpBD,EAAYC,OAIdoB,EAAqC,CACvC,CACIC,MAAO,KACPC,UAAW,KACXC,IAAK,MAET,CACIF,MAAO,eACPC,UAAW,OACXC,IAAK,OAET,CACIF,MAAO,eACPC,UAAW,QACXC,IAAK,SAET,CACIF,MAAO,eACPE,IAAK,SACLD,UAAW,SAEXE,OAAQ,SAACC,EAAOC,GAAR,OACJ,8BACI,kBAAC,IAAD,CAAS7C,KAAK,aACd,uBAAGiB,QAAS,WAAQW,EAAeiB,EAAOhB,MAA1C,cAMhB,OACI,6BACI,kBAAC,IAAD,CAAOiB,WAAYnB,EAAMY,QAASA,EAASQ,OAAO,OADtD,M,iBE3CKC,EAAW,SAACtB,GAA0B,IACvCuB,EAAgBvB,EAAhBuB,YADsC,EAEpBzC,mBAAiB,IAFG,mBAEvC0C,EAFuC,KAEhCC,EAFgC,KAIxCC,EAAa,SAACvB,GDHD,IAACC,KCIR,CAAED,MDHE,IAAIE,SAAsB,SAACC,EAASC,GAChD,IACIC,IAAMC,IAAN,UATI,UASJ,SAAyC,CAAEL,OAAQA,IAAUM,MAAK,SAAAC,GAC9DL,EAAQ,CAACK,EAASlB,UAExB,MAAOmB,GACLL,EAAOK,QCHKF,MAAK,SAAAT,GACjBsB,EAAYtB,OAepB,OACI,6BACI,kBAAC,IAAD,CAAO0B,YAAY,6BAASvC,SAbhB,SAACwC,GACjB,IAAMzC,EAAQyC,EAAMtC,OAAOH,MAC3BsC,EAAStC,IAW8CA,MAAOqC,EAAOK,MAAO,MACxE,kBAAC,IAAD,CAAQtC,QATK,WACb,QAAQuC,KAAKN,IACbE,EAAWK,OAAOP,MAOlB,kB,gBCmCCQ,EAAUC,IAAKxD,OAAsB,CAC9CM,KAAM,YADakD,EAxDH,SAACjC,GAA0B,IACnCkC,EAASlC,EAATkC,KACRC,qBAAU,WAEND,EAAKE,mBACN,IAEH,IAZeC,EAwBPC,EAAqEJ,EAArEI,kBAAmBC,EAAkDL,EAAlDK,eAAgBC,EAAkCN,EAAlCM,cAAeC,EAAmBP,EAAnBO,eAGpDC,EAAYD,EAAe,SAAWD,EAAc,QACpDG,EAAaF,EAAe,UAAYD,EAAc,SAC5D,OACI,kBAAC,IAAD,CAAMI,OAAO,SAASC,SAlBL,SAACxD,GAClBA,EAAEyD,iBACFZ,EAAKE,gBAAe,SAACW,EAAKC,GFwBP,IAAC5C,EEvBX2C,IACDE,QAAQC,IAAI,4BAA6BF,IFsB7B5C,EErBA4C,EFsBR,IAAI3C,SAA8B,SAACC,EAASC,GACxD,IACIC,IAAM2C,KAAN,UA5CI,UA4CJ,SAAoD/C,GAAQM,MAAK,SAAAC,GAC7DL,EAAQK,EAASlB,SAEvB,MAAOmB,GACLL,EAAOK,QE5BiBF,MAAK,SAAAjB,GACrBD,EAAYC,YAapB,kBAAC,IAAK2D,KAAN,CAAWC,eAAgBX,EAAY,QAAU,GAAIY,KAAMZ,GAAa,IACnEJ,EAAkB,OAAQ,CACvBiB,MAAO,CAAC,CAAEC,UAAU,EAAM7D,QAAS,6BADtC2C,CAGG,kBAAC,IAAD,CACImB,OAAQ,kBAAC,IAAD,CAAMnF,KAAK,OAAOoF,MAAO,CAAEC,MAAO,qBAC1ChC,YAAY,WAIxB,kBAAC,IAAKyB,KAAN,CAAWC,eAAgBV,EAAa,QAAU,GAAIW,KAAMX,GAAc,IACrEL,EAAkB,QAAS,CACxBiB,MAAO,CAAC,CAAEC,UAAU,EAAM7D,QAAS,8BADtC2C,CAGG,kBAAC,IAAD,CACImB,OAAQ,kBAAC,IAAD,CAAMnF,KAAK,gBAAgBoF,MAAO,CAAEC,MAAO,qBACnDrF,KAAK,OACLqD,YAAY,YAIxB,kBAAC,IAAKyB,KAAN,KACI,kBAAC,IAAD,CAAQ9E,KAAK,UAAUsF,SAAS,SAASC,UArDtCxB,EAqD0DE,IApDlEuB,OAAOC,KAAK1B,GAAa2B,MAAK,SAAAC,GAAK,OAAI5B,EAAY4B,QAoD9C,qBClDHC,EAAa,WAAO,IAAD,EACJpF,mBAAuB,IADnB,mBACrBmB,EADqB,KACfkE,EADe,KAGtBC,GADWzF,IACE,WHoBH,IAAI0B,SAAsB,SAACC,EAASC,GAChD,IACIC,IAAMC,IAAN,UA/BI,UA+BJ,aAA8CC,MAAK,SAAAC,GAC/CL,EAA6BK,EAZzClB,KAEK4E,KAAI,SAAApE,GAAI,MAAK,CACdE,GAAIF,EAAKE,GACTpB,KAAMkB,EAAKlB,KACXuF,MAAOrE,EAAKqE,cASV,MAAO1D,GACLL,EAAOK,OGxBEF,MAAK,SAAAT,GACdkE,EAAQlE,QAKhBkC,qBAAU,WACNiC,MACD,IAMH,OACI,6BACI,kBAAC,IAAD,CAAQ7E,QAAS,WAAQ6E,MAAzB,4BACA,kBAAC,EAAD,CAAU7C,YAPE,SAACtB,GACjBkE,EAAQlE,MAOJ,kBAAC+B,EAAD,MACA,kBAAC,EAAD,CAAW/B,KAAMA,M,QC7BhBsE,EAAY,WACrB,IACMC,EADU,aACWC,MAAM,KAFN,EAGC3F,oBAAS,GAHV,mBAGpB4F,EAHoB,KAGZC,EAHY,KAIrBC,EAASC,YAAU,CAAEC,QAAS,EAAGC,KAAM,CAAED,QAAS,KAClDE,EAASH,YAAU,CAACC,QAASJ,EAAS,EAAI,IALrB,EAMJG,aAAU,iBAAO,CAACC,QAAS,MANvB,mBAMpBG,EANoB,KAMZC,EANY,QAOXC,YAAWX,EAAWY,OAAQZ,EAAWH,KAAI,SAAAgB,GAAI,MAAK,CAAEP,QAAS,EAAIO,EAAKD,OAAQL,KAAM,CAACD,QAAS,QAC1FK,YAAWX,EAAWY,QAAQ,SAAAE,GAAK,MAAK,CAACR,QAAS,OAR/C,mBAQpBS,EARoB,KAQVC,EARU,OAUKC,YAAS,GAAG,iBAAO,CAACC,OAAQ,IAAKX,KAAM,CAACW,OAAQ,OAVrD,kCAmB3B,OACI,6BACI,kBAAC,IAASC,IAAV,CAAcjC,MAAOkB,GAArB,kBACA,kBAAC,IAASe,IAAV,CAAcjC,MAAOsB,GAArB,2BACA,kBAAC,IAAD,CAAQzF,QAAS,WAAQoF,GAAWD,KAApC,WACA,kBAAC,IAASiB,IAAV,CAAcjC,MAAOuB,GAArB,2BACA,kBAAC,IAAD,CAAQ1F,QAAS,WAAQ2F,EAAK,CAACJ,QAAS,MAAxC,WACCS,EAASlB,KAAI,SAACrE,EAAOsF,GAAR,OACV,kBAAC,IAASK,IAAV,CACIjC,MAAO1D,EACPgB,IAAKsE,EACL/F,QAAS,YAnBG,SAAC+F,GAEzBE,GAAI,SAAAI,GACA,OAAIA,IAAgBN,EACX,CAAER,QAAS,GACb,QAckBe,CAAoBP,KAEpCd,EAAWc,S,mCCpCnBQ,EAAY,4DAIZC,EAAoB,CAAC,4BAAS,4BAAS,eAAM,4BAAS,yCAAY,0CAElEC,EAA0B,CACnC,CAAC,mBAAU,mBAAU,qBAAY,CAAC,mBAAU,mBAAU,qBACtD,CAAC,oBAAW,oBAAW,qBAAY,CAAC,mBAAU,oBAAW,oBAAW,oBACpE,CAAC,mBAAU,mBAAU,oBAAW,CAAC,mBAAU,yBAAW,qBCJpDC,EAAQ,SAACC,EAAUC,EAAUC,GAArB,4BACKF,EADL,cACYC,EADZ,uBAC4BC,EAD5B,MAMDC,EAAY,SAACrG,GAA0B,IACzCsG,EAAgBtG,EAAhBsG,aADwC,EAEpBzB,aAAU,iBAAO,CAAC0B,IAAK,CAAC,EAAG,EAAG,GAAIC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,QAFzD,mBAExCC,EAFwC,KAE3BpB,EAF2B,KAG/CA,EAAI,CAAEe,IAAKD,EAAe,EAAE,KAAM,IAAK,GAAK,EAAE,IAAK,GAAI,KACvD,IAAMO,EAAQ,UAAMf,EAAN,gCACd,OACI,kBAAC,IAASH,IAAV,CAAcmB,UAAWC,IAAOC,KAC5BC,YAAa,kBAAOX,GAAgBd,EAAI,CAAEe,IAAK,EAAE,IAAK,GAAI,QAC1DW,aAAc,kBAAOZ,GAAgBd,EAAI,CAAEe,IAAK,EAAE,IAAK,GAAI,MAG3D7C,MAAO,CAAEyD,UAAWP,EAAYL,IAAIa,YAAYnB,KAEhD,yBACIa,UAAWC,IAAOM,KAClBC,IAAKT,M,kBCtBfU,EAAmB,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,YAEhFtB,EAAQ,SAACG,GAAD,sBAA8BA,EAA9B,MASDoB,EAAqC,SAACxH,GAA0B,IACjEyH,EAAiDzH,EAAjDyH,SAAUC,EAAuC1H,EAAvC0H,WAAYC,EAA2B3H,EAA3B2H,SAAUrB,EAAiBtG,EAAjBsG,aADgC,EAElCzB,aAAU,iBAAO,CAACuB,EAAG,EAAGI,OAAQ,CAAEoB,SAAU,SAFV,mBAEjEC,EAFiE,KAEpDC,EAFoD,KAGjE1B,EAAKvB,YAAU,CAACuB,EAAG,EAAGI,OAAQ,CAAEoB,SAAU,KAAO7C,KAAM,CAACqB,EAAG,KAA3DA,EACP0B,EAAe,CAAC1B,EAAGE,EAAe,EAAI,IACtC,IAKMO,EAAQ,UAAMf,EAAN,mBAA0ByB,EAAQE,IAChD,OACI,kBAAC,IAAS9B,IAAV,CAAcjC,MAAO,CAACyD,UAAWf,EAAEgB,YAAYnB,KAC3C,kBAAC,IAASN,IAAV,CACImB,UAAWC,IAAOM,KAClBJ,YAAa,kBAAOX,GAAgBwB,EAAe,CAAE1B,EAAG,OACxDc,aAAc,kBAAOZ,GAAgBwB,EAAe,CAAE1B,EAAG,KACzD7G,QAAS,WAXbmI,GACAA,EAAWD,IAYP/D,MAAO,CAAEyD,UAAWU,EAAYzB,EAAEgB,YAAYnB,GAAQ8B,gBAAgB,OAAD,OAASlB,EAAT,OACvEc,K,gDC3BRK,GAAK,SAACC,GAAD,MAA+E,CAAE/B,EAAG,EAAGC,GAAQ,EAAL8B,EAAQC,MAAO,EAAGC,IAA2B,GAAhBC,KAAKC,SAAV,GAAyBC,MAAW,IAAJL,IAGvJhC,GAAQ,SAACsC,EAAUnC,GAAX,2DAA6EmC,EAAI,GAAjF,wBAAmGA,EAAnG,sBAAkHnC,EAAlH,MAKDoC,GAAY,SAACxI,GAA0B,IACxCyH,EAAazH,EAAbyH,SACFgB,EAAiBzC,EAAQyB,GAAUpD,KAAI,SAAAqE,GAAM,gBAAO5C,EAAP,yBAAiC4C,MAFrC,EAGhC5J,oBAAS,kBAAM,IAAI6J,OAA3BC,EAHwC,sBAInBzD,YAAWsD,EAAMrD,QAAQ,SAAA6C,GAAC,sBAAUD,GAAGC,GAAb,CAAiBlD,KAXO,CAAEmB,EAAG,EAAGiC,IAAK,EAAGD,MAAO,IAAK/B,GAAI,UAO/D,mBAIxC0C,EAJwC,KAI1BrD,EAJ0B,KAMzCsD,EAAOC,aAAW,YAAsF,IAA5EzD,EAA2E,cAAlF0D,KAAkF,MAAnEC,EAAmE,EAAnEA,KAAcC,EAAqD,cAA7DC,MAA6D,MAAtBC,GAAsB,EAA5CC,SAA4C,cAAlCC,UAAkC,OAAfC,EAAe,EAAfA,SAEpFC,EAAMJ,EAAO,GAAK,EAAI,GACvBH,GAFWM,EAAW,KAEHX,EAAKa,IAAInE,GAEjCE,GAAI,SAAAyC,GACA,GAAI3C,IAAU2C,EAAd,CACA,IAAMyB,EAASd,EAAKe,IAAIrE,GAKxB,MAAO,CAAEY,EAJCwD,GAAU,IAAME,OAAOC,YAAcL,EAAMP,EAAOC,EAAS,EAIzDf,IAHAe,EAAS,KAAOQ,EAAe,GAANF,EAAWD,EAAW,GAG1CrB,MAFHe,EAAO,IAAM,EAEHX,WAAOwB,EAAWtD,OAAQ,CAAEG,SAAU,GAAID,QAASuC,EAAO,IAAMS,EAAS,IAAM,UAGtGT,GAAQL,EAAKmB,OAAStB,EAAMrD,QAAU4E,YAAW,kBAAMpB,EAAKqB,SAAWzE,GAAI,SAAAyC,GAAC,OAAID,GAAGC,QAAK,QAGjG,OACI,yBAAKnB,UAAWC,KAAOmD,MAClBrB,EAAaxE,KAAI,WAAuB4D,GAAvB,IAAG/B,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGgC,EAAT,EAASA,IAAKD,EAAd,EAAcA,MAAd,OAEd,kBAAC,IAASvC,IAAV,CAAc3E,IAAKiH,EAAGvE,MAAO,CAAEyD,UAAWC,YAAY,CAAClB,EAAGC,IAAI,SAACD,EAAGC,GAAJ,4BAAyBD,EAAzB,cAAgCC,EAAhC,cAE1D,kBAAC,IAASR,IAAV,iBAAkBmD,EAAKb,GAAvB,CAA2BvE,MAAO,CAAEyD,UAAWC,YAAY,CAACe,EAAKD,GAAQjC,IAAQ8B,gBAAgB,OAAD,OAASU,EAAMR,GAAf,eCnCvGkC,GAAY,SAACnK,GAA2B,IACzCyH,EAAoCzH,EAApCyH,SAAU2C,EAA0BpK,EAA1BoK,QAAS9D,EAAiBtG,EAAjBsG,aADqB,EAGVzB,aAAU,iBAAO,CAACwF,GAAI,CAAC,EAAG,GAAI7D,OAAQ,CAAEoB,SAAU,SAHxC,mBAGzCC,EAHyC,MAIhDC,EAJgD,MAIjC,CAACuC,GAAI/D,EAAe,CAAC,IAAK,KAAO,CAAC,EAAG,KAIpD,OACI,yBAAKQ,UAAWC,IAAOuD,MACnB,kBAAC,GAAD,CAAW7C,SAAUA,IACrB,kBAAC,IAAS9B,IAAV,CAAcmB,UAAWC,IAAOwD,SAC5BhL,QAAS,WANjB6K,KAQQ1G,MAAO,CAACyD,UAAWU,EAAYwC,GAAGjD,aAAY,SAAClB,EAAGC,GAAJ,4BAAyBD,EAAzB,eAAiCC,EAAjC,eAE9C,kBAAC,EAAD,CAAUsB,SAAUA,EAAUnB,cAAc,GAAO,kDCpBtDkE,GAAU,WAAO,IAAD,EACO1L,oBAAkB,GADzB,mBAClB2I,EADkB,KACRgD,EADQ,OAEe3L,oBAAkB,GAFjC,mBAElBwH,EAFkB,KAEJoE,EAFI,KAGnBhD,EAAa,SAACpC,IACD,IAAXA,GACAoF,GAAgB,IAEL,IAAXpF,GACAoF,GAAgB,GAEpBV,YAAW,WACPS,EAAYnF,KACb,MAqBDqF,EAAO,UAAM7E,EAAN,kBAlBS,SAACR,GACnB,OAAQA,GACJ,KAAK,EACD,MAAO,uEACX,KAAK,EACD,MAAO,qFACX,KAAK,EACD,MAAO,qDACX,KAAK,EACD,MAAO,gEACX,KAAK,EACD,MAAO,0DACX,KAAK,EACD,MAAO,kCACX,QACI,MAAO,wDAGmBsF,CAAcnD,IACpD,OACI,yBAAKX,UAAWC,IAAOuD,MACnB,2BAAOnK,GAAG,WAAWmH,IAAKqD,EAASE,QAAQ,OAAOC,UAAQ,EAACC,MAAI,IAC/D,yBAAKjE,UAAWC,IAAOiE,WACnB,kBAAC,EAAD,CAAW1E,aAAcA,MAEd,IAAdmB,EACG,yBAAKX,UAAWC,IAAOkE,MACnB,yBAAKnE,UAAWC,IAAOmE,KACnB,kBAAC,EAAD,CAAUzD,SAAU,EAAGC,WAAYA,EAAYpB,aAAcA,GAAc,8BAAOP,EAAS,KAC3F,kBAAC,EAAD,CAAU0B,SAAU,EAAGC,WAAYA,EAAYpB,aAAcA,GAAc,8BAAOP,EAAS,MAE/F,yBAAKe,UAAWC,IAAOoE,WACnB,kBAAC,EAAD,CAAU1D,SAAU,EAAGC,WAAYA,EAAYpB,aAAcA,GAAc,8BAAOP,EAAS,KAC3F,kBAAC,EAAD,CAAU0B,SAAU,EAAGC,WAAYA,EAAYpB,aAAcA,GAAc,8BAAOP,EAAS,MAE/F,yBAAKe,UAAWC,IAAOmE,KACnB,kBAAC,EAAD,CAAUzD,SAAU,EAAGC,WAAYA,EAAYpB,aAAcA,GAAc,8BAAOP,EAAS,KAC3F,kBAAC,EAAD,CAAU0B,SAAU,EAAGC,WAAYA,EAAYpB,aAAcA,GAAc,8BAAOP,EAAS,OAGnG,6BACI,kBAAC,GAAD,CAAW0B,SAAUA,EAAU2C,QAAS,WAAQ1C,GAAY,IAAMpB,aAAcA,OC5DvF8E,GAAQ,WAEjB,OACI,6BACI,kBAAC,GAAD,QCsDGC,OAnDf,WAAgB,IACJ9M,EAASK,EACb0M,uBACI,SAACnN,GAAD,MAAoB,CAChBI,KAAMJ,EAAMI,QAEhB,KALAA,KASR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMwL,KAAK,QAAQwB,SAAUhN,GACzB,6BAeI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiN,OAAK,EAACC,KAAK,KACd,mCAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,UACR,kBAAC,GAAD,YCxCRC,QACW,cAA7B9B,OAAO+B,SAASC,UAEe,UAA7BhC,OAAO+B,SAASC,UAEhBhC,OAAO+B,SAASC,SAASC,MACvB,2DCXN,IAAMC,GlBWKC,YAAY7N,EAASE,GkBThC4N,IAAS/K,OACL,kBAACvC,EAAauN,SAAd,CAAuB9M,MAAO2M,IAC1B,kBAAC,GAAD,OAEJI,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5L,MAAK,SAAA6L,GACJA,EAAaC,gBAEdC,OAAM,SAAA3M,GACLmD,QAAQnD,MAAMA,EAAMH,a,mBExI5B3B,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,IAAM,qBAAqB,UAAY,8B","file":"static/js/main.5f595a36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"centerImg_wrap__3e6mS\",\"card\":\"centerImg_card__1QXs5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideLeaf\":\"detail_sideLeaf__wnVrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"sideLeaf_card__3Uab4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailImg_root__1ERbw\"};","// Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved\r\n\r\nimport { Action, IState, INITIAL_STATE } from '../store';\r\n\r\nexport default function reducer(state: IState = INITIAL_STATE, action: Action) {\r\n    switch (action.type) {\r\n\r\n        case 'show': {\r\n            return {\r\n                ...state,\r\n                show: action.payload\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, Store } from 'redux';\r\nimport reducer from '../reducer';\r\nimport { create } from 'redux-react-hook';\r\n\r\nexport interface IState {\r\n  show: boolean;\r\n}\r\n\r\nexport interface Action {\r\n    type: 'show';\r\n    payload: boolean;\r\n}\r\n\r\nexport const INITIAL_STATE: IState = {\r\n    show: false,\r\n};\r\n\r\nexport function makeStore(): Store<IState, Action> {\r\n    return createStore(reducer, INITIAL_STATE);\r\n}\r\n\r\nexport const { StoreContext, useDispatch, useMappedState } = create<\r\n  IState,\r\n  Action,\r\n  Store<IState, Action>\r\n>();\r\n","import React, { useState } from 'react';\r\n\r\nfunction TestHooks() {\r\n    const [name, setName] = useState('jk');\r\n    const [editName, setEditName] = useState(name);\r\n\r\n    const updateName = (newName: string) => {\r\n        setName(newName);\r\n    };\r\n\r\n    const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEditName(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        updateName(editName);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>Hello {name}!</p>\r\n            <br/>\r\n            请输入姓名:<input value={editName} onChange={handleInput}></input>\r\n            <button onClick={handleSubmit}>提交</button>\r\n        </div>\r\n    );\r\n}\r\nexport default TestHooks;","\r\nimport { message } from 'antd';\r\nimport { ResopnseStatusEntity } from '../model/user';\r\n\r\nexport const messageShow = (data:ResopnseStatusEntity) => {\r\n    if (data.status === 200) {\r\n        message.success(data.content);\r\n    } else {\r\n        message.error(data.content);\r\n    }\r\n};","import React from 'react';\r\nimport { Table, Divider } from 'antd';\r\nimport { ColumnProps } from 'antd/es/table';\r\nimport { UserEntity } from '../model/user';\r\nimport { deleteUser } from '../api/listApi';\r\nimport { messageShow } from '../utils/message';\r\n\r\ninterface Props {\r\n    list: UserEntity[]\r\n}\r\n\r\nexport const TableList = (props:Props) => {\r\n    const { list } = props;\r\n\r\n    const deleteUserForm = (id: number) => {\r\n        deleteUser({ id }).then(data => {\r\n            messageShow(data);\r\n        });\r\n    };\r\n\r\n    const columns: ColumnProps<UserEntity>[] = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n            key: 'age',\r\n        },\r\n        {\r\n            title: '资金',\r\n            dataIndex: 'money',\r\n            key: 'money',\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            // eslint-disable-next-line react/display-name\r\n            render: (_text, record) =>\r\n                <span>\r\n                    <Divider type=\"vertical\" />\r\n                    <a onClick={() => { deleteUserForm(record.id) }}>Delete</a>\r\n                </span>\r\n            ,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Table dataSource={list} columns={columns} rowKey=\"id\"/>;\r\n        </div>\r\n    );\r\n};","import { UserEntity, AddUserEntity, ResopnseStatusEntity } from '../model/user';\r\nimport Axios, { AxiosResponse } from 'axios';\r\n\r\nconst baseURL = 'account';\r\n\r\ninterface Params{\r\n    id?:number\r\n}\r\n\r\nexport const getList = (params:Params): Promise<UserEntity[]> => {\r\n    const promise = new Promise<UserEntity[]>((resolve, reject) => {\r\n        try {\r\n            Axios.get<UserEntity>(`${baseURL}/find`, { params: params }).then(response => {\r\n                resolve([response.data]);\r\n            });\r\n        } catch (ex) {\r\n            reject(ex);\r\n        }\r\n    });\r\n    return promise;\r\n};\r\n\r\nconst mapListAllApiToModel = ({\r\n    data\r\n}: AxiosResponse<any[]>): UserEntity[] =>\r\n    data.map(list => ({\r\n        id: list.id,\r\n        name: list.name,\r\n        money: list.money\r\n    }));\r\n\r\nexport const getListAll = (): Promise<UserEntity[]> => {\r\n    const promise = new Promise<UserEntity[]>((resolve, reject) => {\r\n        try {\r\n            Axios.get<UserEntity[]>(`${baseURL}/findAll`).then(response => {\r\n                resolve(mapListAllApiToModel(response));\r\n            });\r\n        } catch (ex) {\r\n            reject(ex);\r\n        }\r\n    });\r\n    return promise;\r\n};\r\n\r\nexport const addUserPost = (params: AddUserEntity): Promise<ResopnseStatusEntity> => {\r\n    const promise = new Promise<ResopnseStatusEntity>((resolve, reject) => {\r\n        try {\r\n            Axios.post<ResopnseStatusEntity>(`${baseURL}/save`, params).then(response => {\r\n                resolve(response.data);\r\n            });\r\n        } catch (ex) {\r\n            reject(ex);\r\n        }\r\n    });\r\n    return promise;\r\n};\r\n\r\nexport const deleteUser = (params:Params): Promise<ResopnseStatusEntity> => {\r\n    const promise = new Promise<ResopnseStatusEntity>((resolve, reject) => {\r\n        try {\r\n            Axios.get<ResopnseStatusEntity>(`${baseURL}/delete`, { params: params }).then(response => {\r\n                resolve(response.data);\r\n            });\r\n        } catch (ex) {\r\n            reject(ex);\r\n        }\r\n    });\r\n    return promise;\r\n};","import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport { getList } from '../api/listApi';\r\nimport { UserEntity } from '../model/user';\r\n\r\ninterface SearchIdProps{\r\n    getListById: (list: UserEntity[]) => void;\r\n}\r\nexport const SearchId = (props: SearchIdProps) => {\r\n    const { getListById } = props;\r\n    const [input, setInput] = useState<string>('');\r\n\r\n    const searchById = (id: number) => {\r\n        getList({ id }).then(list => {\r\n            getListById(list);\r\n        });\r\n    };\r\n\r\n    const inputHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setInput(value);\r\n    };\r\n\r\n    const searchHandle = () => {\r\n        if (/^\\d+$/.test(input)) {\r\n            searchById(Number(input));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Input placeholder=\"输入用户ID\" onChange={inputHandle} value={input} width={300}/>\r\n            <Button onClick={searchHandle}>查找</Button>\r\n        </div>\r\n    );\r\n};","import React, { useEffect } from 'react';\r\nimport { addUserPost } from '../api/listApi';\r\nimport { FormComponentProps } from 'antd/es/form';\r\nimport { messageShow } from '../utils/message';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\n\r\nconst hasErrors = (fieldsError: Record<string, string[] | undefined>):boolean => {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n};\r\n\r\ninterface UserFormProps extends FormComponentProps {}\r\nconst AddUserForm = (props: UserFormProps) => {\r\n    const { form } = props;\r\n    useEffect(() => {\r\n    // To disable submit button at the beginning.\r\n        form.validateFields();\r\n    }, []);\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                addUserPost(values).then(data => {\r\n                    messageShow(data);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = form;\r\n\r\n    // Only show error after a field is touched.\r\n    const nameError = isFieldTouched('name') && getFieldError('name');\r\n    const moneyError = isFieldTouched('money') && getFieldError('money');\r\n    return (\r\n        <Form layout=\"inline\" onSubmit={handleSubmit}>\r\n            <Form.Item validateStatus={nameError ? 'error' : ''} help={nameError || ''}>\r\n                {getFieldDecorator('name', {\r\n                    rules: [{ required: true, message: 'Please input your name!' }],\r\n                })(\r\n                    <Input\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        placeholder=\"name\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item validateStatus={moneyError ? 'error' : ''} help={moneyError || ''}>\r\n                {getFieldDecorator('money', {\r\n                    rules: [{ required: true, message: 'Please input your money!' }],\r\n                })(\r\n                    <Input\r\n                        prefix={<Icon type=\"money-collect\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"text\"\r\n                        placeholder=\"money\"\r\n                    />,\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                    添加\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport const AddUser = Form.create<UserFormProps>({\r\n    name: 'add_user'\r\n})(AddUserForm);","import React, { useState, useEffect } from 'react';\r\nimport { TableList } from './TableList';\r\nimport { SearchId } from './SearchId';\r\nimport { AddUser } from './AddUser';\r\nimport { getListAll } from '../api/listApi';\r\nimport { UserEntity } from '../model/user';\r\nimport { Button } from 'antd';\r\nimport { useDispatch } from '../store';\r\n\r\nexport const SpringTest = () => {\r\n    const [list, setList] = useState<UserEntity[]>([]);\r\n    const dispatch = useDispatch();\r\n    const getAllList = () => {\r\n        // dispatch({ type: 'show', payload: true });\r\n        getListAll().then(list => {\r\n            setList(list);\r\n            // dispatch({ type: 'show', payload: false });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllList();\r\n    }, []);\r\n\r\n    const getListById = (list: UserEntity[]) => {\r\n        setList(list);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => { getAllList() }}>查找所有</Button>\r\n            <SearchId getListById={getListById}></SearchId>\r\n            <AddUser></AddUser>\r\n            <TableList list={list}></TableList>\r\n        </div>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport { useSpring, useSprings, animated, useTrail } from 'react-spring';\r\nimport { Button } from 'antd';\r\n\r\nexport const Animation = () => {\r\n    const message = 'I love you';\r\n    const messageArr = message.split(' ');\r\n    const [toggle, setToggle] = useState(true);\r\n    const props1 = useSpring({ opacity: 1, from: { opacity: 0 }});\r\n    const props2 = useSpring({opacity: toggle ? 1 : 0});\r\n    const [props3, set1] = useSpring(() => ({opacity: 1}));\r\n    const springs = useSprings(messageArr.length, messageArr.map(item => ({ opacity: 1 / item.length, from: {opacity: 1} })));\r\n    const [springs1, set] = useSprings(messageArr.length, index => ({opacity: 1}));\r\n    // @ts-ignore\r\n    const [trail, setTrail, stop] = useTrail(3, () => ({height: 100, from: {height: 0}}));\r\n    const animatedClickHandle = (index: number) => {\r\n        // @ts-ignore\r\n        set(springIndex => {\r\n            if (springIndex === index)\r\n            { return { opacity: 0 } }\r\n            return null;\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <animated.div style={props1}>I will fade in</animated.div>\r\n            <animated.div style={props2}>I will fade in and out1</animated.div>\r\n            <Button onClick={() => { setToggle(!toggle) }}>Toggle1</Button>\r\n            <animated.div style={props3}>I will fade in and out2</animated.div>\r\n            <Button onClick={() => { set1({opacity: 0}) }}>Toggle2</Button>\r\n            {springs1.map((props, index) =>\r\n                <animated.div\r\n                    style={props}\r\n                    key={index}\r\n                    onClick={() => { animatedClickHandle(index) }}\r\n                >\r\n                    {messageArr[index]}\r\n                </animated.div>)}\r\n            {/* {trail.map((props, index) => <animated.div style={props}>hahahhahahahah</animated.div>)} */}\r\n        </div>\r\n    );\r\n};","export const sourceUrl = 'https://jiakaihaoren.github.io/mySources/myReactApp/jkzzj';\r\n\r\nexport const navUris:string[] = ['nav1.png', 'nav2.png', 'nav3.png', 'nav4.png', 'nav5.png', 'nav6.png'];\r\n\r\nexport const navTexts:string[] = ['初识&相恋', '毕业&生日', '稻城', '长沙&雷子', '公园&山顶&滑雪', '成都&酒馆&熊猫'];\r\n\r\nexport const navImgs:Array<string>[] = [\r\n    ['初识.jpg', '相恋.jpg', '相恋2.jpg'], ['毕业.jpg', '生日.jpg', '生日2.jpg'],\r\n    ['稻城1.jpg', '稻城2.jpg', '稻城3.jpg'], ['长沙.jpg', '长沙1.jpg', '长沙2.jpg', '雷子.jpg'],\r\n    ['公园.jpg', '山顶.jpg', '滑雪.jpg'], ['成都.jpg', '小酒馆.jpg', '熊猫.jpg']\r\n];","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport styles from './index.module.css';\r\nimport {sourceUrl} from '../utils';\r\n\r\nconst trans = (x:number, y:number, s:number):string =>\r\n    `translate3d(${x}%, ${y}%, 0) scale(${s})`;\r\n\r\ninterface CenterImgProps{\r\n    showAnimated:boolean\r\n}\r\nexport const CenterImg = (props:CenterImgProps) => {\r\n    const {showAnimated} = props;\r\n    const [propsSpring, set] = useSpring(() => ({xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }));\r\n    set({ xys: showAnimated ? [-200, -100, 1] : [-50, -50, 1] });\r\n    const imageUrl = `${sourceUrl}/images/jkzzj/subjectImg.jpg`;\r\n    return (\r\n        <animated.div className={styles.wrap}\r\n            onMouseMove={() => !showAnimated && set({ xys: [-50, -50, 1.1] })}\r\n            onMouseLeave={() => !showAnimated && set({ xys: [-50, -50, 1] })}\r\n            // onClick={() => set({ xys: [20, 20, 1] })}\r\n            // @ts-ignore\r\n            style={{ transform: propsSpring.xys.interpolate(trans) }}\r\n        >\r\n            <img\r\n                className={styles.card}\r\n                src={imageUrl}\r\n            />\r\n        </animated.div>\r\n    );\r\n};","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport styles from './index.module.css';\r\nimport { sourceUrl } from '../utils';\r\nconst navUris:string[] = ['nav1.png', 'nav2.png', 'nav3.png', 'nav4.png', 'nav5.png', 'nav6.png'];\r\n\r\nconst trans = (s:number):string => `scale(${s})`;\r\n\r\ninterface SideLeafProps{\r\n    children: React.ReactElement,\r\n    navIndex:number,\r\n    showDetail?:(id:number)=>void\r\n    showAnimated:boolean\r\n}\r\n\r\nexport const SideLeaf : React.FC<SideLeafProps> = (props: SideLeafProps) => {\r\n    const { navIndex, showDetail, children, showAnimated } = props;\r\n    const [springProps, setSpringProps] = useSpring(() => ({s: 1, config: { duration: 300 } }));\r\n    const {s} = useSpring({s: 1, config: { duration: 500 }, from: {s: 0} });\r\n    setSpringProps({s: showAnimated ? 0 : 1});\r\n    const toNavDetail = () => {\r\n        if (showDetail) {\r\n            showDetail(navIndex);\r\n        }\r\n    };\r\n    const imageUrl = `${sourceUrl}/images/${navUris[navIndex]}`;\r\n    return (\r\n        <animated.div style={{transform: s.interpolate(trans)}}>\r\n            <animated.div\r\n                className={styles.card}\r\n                onMouseMove={() => !showAnimated && setSpringProps({ s: 1.1 })}\r\n                onMouseLeave={() => !showAnimated && setSpringProps({ s: 1 })}\r\n                onClick={() => { toNavDetail() }}\r\n                // @ts-ignore\r\n                style={{ transform: springProps.s.interpolate(trans), backgroundImage: `url(${imageUrl})` }}\r\n            >{children}</animated.div>\r\n        </animated.div>\r\n    );\r\n};","import React, { useState } from 'react';\r\n// @ts-ignore\r\nimport { useSprings, animated, interpolate } from 'react-spring';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport styles from './DetailImg.module.css';\r\nimport { navImgs, sourceUrl } from '../../utils';\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = (i:number) : {x:number, y:number, scale:number, rot:number, delay:number } => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 });\r\nconst from = (i:number) : {x: number, rot: number, scale: number, y: number } => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r:number, s:number):string => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\r\n\r\ninterface DetailImgProps{\r\n    navIndex:number\r\n}\r\nexport const DetailImg = (props:DetailImgProps) => {\r\n    const { navIndex } = props;\r\n    const cards:string[] = navImgs[navIndex].map(navImg => `${sourceUrl}/images/jkzzj/${navImg}`);\r\n    const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\r\n    const [springsProps, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) })); // Create a bunch of springs using the helpers above\r\n    // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\r\n    const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\r\n        const trigger = velocity > 0.15; // If you flick hard enough it should trigger the card to fly out\r\n        const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\r\n        if (!down && trigger) { gone.add(index) } // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\r\n        // @ts-ignore\r\n        set(i => {\r\n            if (index !== i) { return } // We're only interested in changing spring-data for the current spring\r\n            const isGone = gone.has(index);\r\n            const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\r\n            const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\r\n            const scale = down ? 1.1 : 1; // Active cards lift up a bit\r\n            // eslint-disable-next-line consistent-return\r\n            return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } };\r\n        });\r\n        // @ts-ignore\r\n        if (!down && gone.size === cards.length) { setTimeout(() => gone.clear() || set(i => to(i)), 600) }\r\n    });\r\n    // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\r\n    return (\r\n        <div className={styles.root}>\r\n            {springsProps.map(({ x, y, rot, scale }, i) =>\r\n                // @ts-ignore\r\n                <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\r\n                    {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\r\n                    <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\r\n                </animated.div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useSpring, animated, interpolate } from 'react-spring';\r\nimport styles from './index.module.css';\r\nimport { DetailImg } from './detailImg/DetailImg';\r\nimport { SideLeaf } from '../sideLeaf';\r\n\r\ninterface NavDetailProps{\r\n    navIndex:number,\r\n    showNav:()=>void,\r\n    showAnimated:boolean\r\n}\r\nexport const NavDetail = (props: NavDetailProps) => {\r\n    const { navIndex, showNav, showAnimated } = props;\r\n    // const { xy } = useSpring({from: {xy: [0, 0] }, xy: [300, 100], config: {duration: 1000} });\r\n    const [springProps, setSpringProps] = useSpring(() => ({xy: [0, 0], config: { duration: 300 } }));\r\n    setSpringProps({xy: showAnimated ? [300, 100] : [0, 0]});\r\n    const toNav = () => {\r\n        showNav();\r\n    };\r\n    return (\r\n        <div className={styles.body}>\r\n            <DetailImg navIndex={navIndex}></DetailImg>\r\n            <animated.div className={styles.sideLeaf}\r\n                onClick={() => { toNav() }}\r\n                // @ts-ignore\r\n                style={{transform: springProps.xy.interpolate((x, y) => `translate3d(${x}px, ${y}px, 0)`)}}\r\n            >\r\n                <SideLeaf navIndex={navIndex} showAnimated={false}><span>返回</span></SideLeaf>\r\n            </animated.div>\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport styles from './index.module.css';\r\nimport { CenterImg } from './centerImg';\r\nimport { SideLeaf } from './sideLeaf';\r\nimport { NavDetail } from './detail';\r\nimport { navTexts, sourceUrl } from './utils';\r\n\r\nexport const Subject = () => {\r\n    const [navIndex, setNavIndex] = useState<number>(-1);\r\n    const [showAnimated, setShowAnimated] = useState<boolean>(false);\r\n    const showDetail = (index:number) => {\r\n        if (index !== -1) {\r\n            setShowAnimated(true);\r\n        }\r\n        if (index === -1) {\r\n            setShowAnimated(false);\r\n        }\r\n        setTimeout(() => {\r\n            setNavIndex(index);\r\n        }, 1000);\r\n    };\r\n\r\n    const bgMusicSource = (index:number):string => {\r\n        switch (index) {\r\n            case 0:\r\n                return '周三 - 一个歌手的情书 (Live).mp3';\r\n            case 1:\r\n                return '阿肆 _ 林宥嘉 - 致姗姗来迟的你.mp3';\r\n            case 2:\r\n                return '马良 - 往后余生 (Demo).mp3';\r\n            case 3:\r\n                return '赵雷 - 开往北京的火车.mp3';\r\n            case 4:\r\n                return '莫文蔚 - 慢慢喜欢你.mp3';\r\n            case 5:\r\n                return '赵雷 - 成都.mp3';\r\n            default:\r\n                return '陈芳语 - 爱你 (铃声).mp3';\r\n        }\r\n    };\r\n    const bgMusic = `${sourceUrl}/music/${bgMusicSource(navIndex)}`;\r\n    return (\r\n        <div className={styles.body}>\r\n            <audio id=\"bg-music\" src={bgMusic} preload=\"auto\" autoPlay loop></audio>\r\n            <div className={styles.centerImg}>\r\n                <CenterImg showAnimated={showAnimated}></CenterImg>\r\n            </div>\r\n            {navIndex === -1 ?\r\n                <div className={styles.home}>\r\n                    <div className={styles.nav}>\r\n                        <SideLeaf navIndex={0} showDetail={showDetail} showAnimated={showAnimated}><span>{navTexts[0]}</span></SideLeaf>\r\n                        <SideLeaf navIndex={5} showDetail={showDetail} showAnimated={showAnimated}><span>{navTexts[5]}</span></SideLeaf>\r\n                    </div>\r\n                    <div className={styles.navCenter}>\r\n                        <SideLeaf navIndex={1} showDetail={showDetail} showAnimated={showAnimated}><span>{navTexts[1]}</span></SideLeaf>\r\n                        <SideLeaf navIndex={4} showDetail={showDetail} showAnimated={showAnimated}><span>{navTexts[4]}</span></SideLeaf>\r\n                    </div>\r\n                    <div className={styles.nav}>\r\n                        <SideLeaf navIndex={2} showDetail={showDetail} showAnimated={showAnimated}><span>{navTexts[2]}</span></SideLeaf>\r\n                        <SideLeaf navIndex={3} showDetail={showDetail} showAnimated={showAnimated}><span>{navTexts[3]}</span></SideLeaf>\r\n                    </div>\r\n                </div> :\r\n                <div>\r\n                    <NavDetail navIndex={navIndex} showNav={() => { showDetail(-1) }} showAnimated={showAnimated}></NavDetail>\r\n                </div>}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Subject } from './subject';\r\n\r\nexport const JKZZJ = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Subject></Subject>\r\n        </div>\r\n    );\r\n};","import React, { useCallback } from 'react';\r\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Spin } from 'antd';\r\nimport { useMappedState, IState } from './store';\r\nimport TestHooks from './test/TestHooks';\r\nimport { SpringTest } from './serverTest';\r\nimport { Animation } from './animation';\r\nimport { JKZZJ } from './jkzzj';\r\n\r\nfunction App() {\r\n    const { show } = useMappedState(\r\n        useCallback(\r\n            (state: IState) => ({\r\n                show: state.show,\r\n            }),\r\n            [],\r\n        ),\r\n    );\r\n\r\n    return (\r\n        <Router>\r\n            <Spin size=\"large\" spinning={show}>\r\n                <div>\r\n                    {/* <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/test\">Test</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/user\">User</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/animation\">Animation</Link>\r\n                        </li>\r\n                    </ul> */}\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <div>/</div>\r\n                        </Route>\r\n                        <Route path=\"/test\">\r\n                            <TestHooks></TestHooks>\r\n                        </Route>\r\n                        <Route path=\"/user\">\r\n                            <SpringTest></SpringTest>\r\n                        </Route>\r\n                        <Route path=\"/animation\">\r\n                            <Animation></Animation>\r\n                        </Route>\r\n                        <Route path=\"/jkzzj\">\r\n                            <JKZZJ></JKZZJ>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Spin>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.tsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StoreContext, makeStore } from './store';\r\n\r\nconst store = makeStore();\r\n\r\nReactDOM.render(\r\n    <StoreContext.Provider value={store}>\r\n        <App />\r\n    </StoreContext.Provider>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"subject_body__2Loj0\",\"home\":\"subject_home__lIetF\",\"nav\":\"subject_nav__2Hx9C\",\"navCenter\":\"subject_navCenter__1KAl_\"};"],"sourceRoot":""}